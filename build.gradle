//file:noinspection GroovyUnusedAssignment
plugins {
    id 'fabric-loom' version '1.0-SNAPSHOT'
    id 'maven-publish'
}
version = '1.19.2-fabric-0.1.9'
group = 'mods.thecomputerizer.theimpossiblelibrary'
archivesBaseName = 'theimpossiblelibrary'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

repositories {
    google()
    mavenCentral()
    maven {
        url = uri("https://www.cursemaven.com")
        content {
            includeGroup "curse.maven"
        }
    }
    maven {
        url = uri("https://m2.dv8tion.net/releases")
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

sourceSets {
    main {
        ext.refMap = "mixins.theimpossiblelibrary.refmap.json"
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings loom.officialMojangMappings()
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    //external dependencies
    include (implementation("com.moandjiezana.toml:toml4j:0.7.2") { exclude group: 'com.google.code.gson', module: 'gson' })
}

processResources {
    inputs.property "version", project.version
    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 17
}

java {
    withSourcesJar()
}

loom {
    //accessWidenerPath = file("src/main/resources/theimpossiblelibrary.accesswidener")
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}"}
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
    repositories {
    }
}