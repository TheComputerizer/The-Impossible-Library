/**
 * Build workflow guidelines
 * api -> (fabric, forge, legacy, neoforge) -> (1.12, 1.16, 1.18, 1.19, 1.20, 1.21) -> (minor versions) -> main
 * Shading and relocation must happen within each module to properly respect reobfuscation.
 * Any necessary reobfuscations must happen in the version the deobfuscations happened in.
 */

apply from: rootProject.file('buildSrc\\shared.gradle')
java.toolchain.languageVersion = JavaLanguageVersion.of(22)

jar {
    def api = project(':api')
    def legacy_1_12 = project(':legacy:legacy.1_12')
    def forge_1_16 = project(':forge:forge.1_16')
    legacy_1_12.afterEvaluate { from(it.jar.archiveFile.collect { zipTree(it) }) }
    forge_1_16.afterEvaluate { from(it.jar.archiveFile.collect { zipTree(it) }) }
    manifest {
        attributes([
                'FMLAT': 'theimpossiblelibrary_at.cfg',
                'FMLCorePlugin': "${legacy_1_12.mod_plugin}1_12_2",
                'ForceLoadAsMod': true,
                'Implementation-Title': name,
                'Implementation-Version': version,
                'TILMultiversionMods': api.common_entrypoint
        ])
    }
}

tasks.jar.dependsOn(':legacy:legacy.1_12:build')
tasks.jar.dependsOn(':forge:forge.1_16:build')