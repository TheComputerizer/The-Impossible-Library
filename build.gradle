//file:noinspection GroovyAssignabilityCheck
plugins {
    id 'fabric-loom' version '0.12-SNAPSHOT'
}
version = "${project.minecraft_version}-fabric-${project.mod_version}"
group = project.maven_group
archivesBaseName = project.base_name

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

repositories {
    google()
    mavenCentral()
    maven {
        name 'ParchmentMC'
        url = uri('https://maven.parchmentmc.org')
    }
    maven {
        url = uri("https://m2.dv8tion.net/releases")
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings loom.layered() {
        officialMojangMappings()
        parchment("org.parchmentmc.data:parchment-${project.minecraft_version}:${project.parchment_version}@zip")
    }
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    //external dependencies
    include (implementation("com.moandjiezana.toml:toml4j:${project.toml4j_version}") {
        exclude group: 'com.google.code.gson', module: 'gson'
    })
}

processResources {
    inputs.property "version", project.version
    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
    exclude '**/theimpossiblelibrary/test/**'
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 17
}

java {
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}"}
    }
}
