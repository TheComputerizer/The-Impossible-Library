
plugins {
    id 'net.minecraftforge.gradle' version '6.+'
    id 'com.github.johnrengelman.shadow' version '8.1.+'
    id 'wtf.gofancy.fancygradle' version '1.1.+'
    id 'java'
}

fancyGradle {
    patches {
        resources
        coremods
        asm
        mergetool
    }
}

version = "${project.minecraft_version}-${project.mod_version}"
group = project.maven_group
archivesBaseName = project.base_name

java.toolchain.languageVersion = JavaLanguageVersion.of(8)

minecraft {
    mappings channel: 'stable', version: project.mappings_version
    accessTransformer = file('src/main/resources/META-INF/theimpossiblelibrary_at.cfg')
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
        }
        server {
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
        }
    }
}

repositories {
    google()
    mavenCentral()
    maven {
        url = uri('https://www.cursemaven.com')
        content {
            includeGroup 'curse.maven'
        }
    }
    maven {
        url = uri('https://m2.dv8tion.net/releases')
    }
}

configurations {
    shade
    implementation.extendsFrom(shade)
    shadow.extendsFrom shade
}

dependencies {
    minecraft "net.minecraftforge:forge:${project.minecraft_version}-${project.forge_version}"

    //external dependencies
    shade("com.moandjiezana.toml:toml4j:${project.toml4j_version}") {  //for toml files
        exclude group: 'com.google.code.gson', module: 'gson'
    }
}

shadowJar {
    //necessary relocation
    relocate 'com.moandjiezana.toml', "${project.shadow_group}.moandjiezana.toml"
    configurations = [project.configurations.shadow]
    setArchiveClassifier('')
}

reobf {
    shadowJar {
        dependsOn createMcpToSrg
        mappings = createMcpToSrg.output
    }
}

processResources {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
    inputs.property 'version', project.version
    inputs.property 'mcversion', project.minecraft_version
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand 'version': project.version, 'mcversion': project.minecraft_version
    }
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
    //exclude '**/theimpossiblelibrary/test/**'
}

jar {
    manifest {
        attributes([
            "Implementation-Title": project.name,
            "Implementation-Version": project.version,
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
            'FMLAT': 'theimpossiblelibrary_at.cfg'
        ])
    }
}

tasks.assemble.dependsOn('shadowJar')
tasks.shadowJar.dependsOn('reobfJar')
tasks.jar.finalizedBy('reobfJar')