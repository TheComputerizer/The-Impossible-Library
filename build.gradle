plugins {
    id 'com.github.johnrengelman.shadow' version '8.1.+'
}

allprojects {
    plugins.apply('java')
    version = project.mod_version
    group = project.maven_group
    archivesBaseName = project.mod_id
}

subprojects {
    repositories {
        mavenCentral()
    }
    dependencies {
        annotationProcessor("org.projectlombok:lombok:${project.lombok_version}")
    }
}

repositories {

}

dependencies {

}

/*
shadowJar {
    //necessary relocation
    relocate 'com.moandjiezana.toml', "${shadow_group}.moandjiezana.toml"
    configurations = [project.configurations.shadow]
    setArchiveClassifier('')
}

reobf {
    shadowJar {
        dependsOn createMcpToSrg
        mappings = createMcpToSrg.output
    }
}

mixin {
    add sourceSets.main, "theimpossiblelibrary.refmap.json"
}

processResources {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
    from (sourceSets.main.resources.srcDirs) {
        include 'META-INF/mods.toml'
        expand 'version': project.version
    }
    exclude '** /theimpossiblelibrary/test/ **'
}
 */

/*
tasks.assemble.dependsOn('shadowJar')
tasks.shadowJar.dependsOn('reobfJar')
tasks.jar.finalizedBy('reobfJar')
 */

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}